{"version":3,"sources":["src/CST.ts","src/BootScene.ts","src/MenuScene.ts","src/PlayScene.ts","src/Loader.ts","src/main.ts"],"names":[],"mappings":"cEAA;AGAA;;;;ALAa,OAAA,CAAA,GAAA,GAAM;AACf,EAAA,MAAM,EAAC;AACH,AKAR,ILAQ,AKAR,ILAY,EAAC,KKAb,CLDW,EKCX,OAAA,CAAA,aAAA,CAAA;ALCQ,IAAA,IAAI,EAAC,MAFF;AAGH,AKDR,ILCQ,AKDR,ILCY,EAAC,KKDb,CLFW,EKEX,OAAA,CAAA,aAAA,CAAA;ALEQ,IAAA,MAAM,EAAC;AAJJ,AKGX,GLJmB,CKInB,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;ALGI,EAAA,KAAK,EAAC;AACF,AKHR,ILGQ,AKHR,KLGa,EAAC,CKHd,GAAA,OAAA,CAAA,UAAA,CAAA,EACA;ALCU,GAPS;AAUf,EAAA,KAAK,EAAC;AACF,AKFR,ILEQ,AKFJ,ILEQ,AKFJ,ELEK,CKFF,IAAI,KLCL,CKDW,CAAC,IAAX,CAAgB;ALGnB,AKFJ,EAAA,ELEI,GKFC,ELEI,AKFH,ELEI,IKFE,CAAC,UADU;ALCjB,AKCN,EAAA,MAAM,EAAC,MAAM,CAAC,WAFS;ALTR,AKYf,CLZS,CKYT,eAAe,EAAE,QAHM;AAIvB,EAAA,KAAK,EAAC,CACF,WAAA,CAAA,SADE,EACQ,WAAA,CAAA,SADR,EACkB,WAAA,CAAA,SADlB,EAC4B,QAAA,CAAA,MAD5B,CAJiB;AAOvB,EAAA,MAAM,EAAC;AACH,IAAA,QAAQ,EAAC;AADN,GAPgB;AJT3B,AGAA,AFEA,ACFA,AEmBI,EAAA,EJnBJ,AGAA,AFEA,ACFA,KFAA,AGAA,AFEA,ACFA,AEmBW,EAAE,CJnBb,AGAA,AFEA,ACFA,OFAA,AGAA,AFEA,ACFA,CFAA,AGAA,AFEA,ACFA,OFAA,AGAA,AFEA,ACFA,CFAA,AGAA,AFEA,ACFA;AEoBQ,IAAA,OAAO,EAAE,QADJ;AAEL,IJpBK,AGAA,AFEA,ACDA,AEmBL,MAAM,EAAE;AACJ,MAAA,KAAK,EAAE;AADH;AAFH,GAVc;AAgBvB,EAAA,KAAK,EAAC;AJvBN,AGAA,AFEA,ACCA,AEqBI,IAAA,IAAI,EAAC,MAAM,CAAC,GDxBhB,ECwBS,CJxBT,ACEA,ACCA,AEqBsB,GADhB;AJvBN,AGAA,AFEA,ACCA,AEsBI,IAAA,UAAU,EAAC,MAAM,CAAC,KAAP,CAAa;AAFtB;AJvBN,AGAA,AFEA,ACCA,AEIuB,CAAhB,CAAX,6EDNc,GHAA,ACEA,ACEA;AFHF,AGAA,AFEA,ACEA,MFJA,AGAA,AFEA,ACEA,GFJG,AGAA,AFEA,ACEA,EFJC,AGAA,AFEA,ACEA,KFJA,AGAA,AFEA,ACEA,CFJA,AGAA,AFEA,ACEA,GFJA,AGAA,AFEA,ACEA,CFJI,AGAA,AFEA,ACEA,MFJJ,AGAA,AFEA,ACEA,CFJW,AGAA,AFEA,ACEA;AFLb,AGAA,AFEA,ACEA,KFLV,AGAA,AFEA,ACCA;AFEC,AGAA,AFEA,ACEA,IDDG;;;;2BDFE,AGAF,CHED,AGAF,EDEM;AAGH,WAAK,QAAL,CAAc,KDJT,MAAI,YCIT,CAAsC,MAAtC,EAA6C;ADHzC,ACG0C,MDH1C,ECG0C,KDHnC,CAAC,GAAR,CAAY,ACGwC,EAAC,EDHrD,ACGyC;ADFzC,ACEwD,MDFxD,ECEwD,KDFjD,CAAC,GAAR,CAAY,CCEuD,EAAC,EDFpE,ACEyC,OFJxC,AGAF;AHCF,AGDE,AFKF,ACD2E,QAAA,GFHtE,EEG2E,EFHhF,AEGiF,CFHvE,KAAV,CAAgB,CEG4B,KFH5C,EAAwB,yBAAxB;AACA,AEE2F,QAAA,GFFtF,EEE2F,EFFhG,AEEiG,CFFvF,KAAV,CAAgB,OAAhB,EAAyB,0BAAzB;AAED,AGHA,ADG6C,OAA7C,GCHI,CHGC,IAAL,CAAU,IGHI,CHGd,CAAgB,CGHC,KAAK,CHGtB,EAAyB,AGHR,CAAS,QAAT,CAAkB,qBHGnC;AAEA,AGJI,ADGJ,QCHI,GHIC,AEDA,IFCL,AEDA,CFCU,AEDA,CCHG,EAAE,EHIf,AEDA,CFCgB,AEDA,ODEV,ACFN,CFCA,CEDyB,CFCC,6BAA1B,EAAwD,EEDxD,kCFCA,EANK,CASD;AACA,AGPI,AFIF,ACDN,UCHQ,CDGH,ICHQ,ADGb,CAAU,CCHI,IDGd,CAAgB,OAAhB,EAAyB,0BAAzB,EALG,CAOH;AFII,AGVW;AHYhB,AGboC,AFO/B,ACCJ,OCRiB,CAAjB,EFOQ,CCCH,IDDQ,ACCb,CAAU,EDDM,KAAK,GAAL,CAAS,ACCzB,CAAsB,IDDN,CAAe,ECC/B,EAA+B,CDDK,IAAL,CAAU,QAAV,CAAmB,KAAnB,GAA2B,CAA1C,EAA6C,KAAK,GCClE,CDD6D,CAAU,ACCL,QDDL,CAAmB,MAAnB,GAA4B,IAAzE,EAA+E,OAA/E,EAAwF,QAAxF,CAAiG,CAAjG,CAAZ;AACA,ACA+D,QAAA,GDA1D,GAAL,CAAS,GCAgE,EDAzE,ACA0E,CDA3D,CAAC,ACA8C,GDA9D,EAAoB,CAAC,GAArB,EAAyB,MAAzB,EAAiC,SAAjC,CAA2C,CAA3C;AEFA,AFKA,ACH8E,MDG9E,ECH8E,GCFzE,AFKA,CAAC,GELG,CAAC,GAAG,ADE4E,CCFzF,CDE0F,CCF1E,CAAC,GAAG,AFKpB,GELA,EAAyB,CAAC,EAA1B,EAA8B;AAC1B,AFMJ,ACL8D,MDK9D,CCLJ,IDKS,CAAC,CENG,CFMT,CAAS,EENL,CAAU,UFMd,CDCA,AGPI,CAAsB,AFMH,SENW,CAA9B,EAAiC,AFMT,2BENxB,EAA6D;AHQnE,AGPU,AFMJ,ACLR,QDKQ,EENI,CDCP,EDKQ,CAAC,CCLd,CAAU,ICDY,EAAC,AFMf,CAAe,CEP8C,GFO7D,KCLR,CAA2B,KAA3B,EAAiC,yBAAjC;AFOA,AGPY,AFMP,ACHL,MAAA,CDCI,GEJQ,CHOP,EEJE,CAAC,EFIR,CAAW,AEJX,CAAY,GCHW,CHOvB,CAAiB,AGPO,ADGP,KFIA,CAAA,EEJL,CFIK,AEJS,CFIL,GEJrB,GFIiB,CAAW,IAA5B,EAAkC,MAAlC;AACD,AGVsE,AFUjE,ACJJ,MDII,GEVI,EFUC,ACJJ,CDIK,EAAN,CAAS,CCJb,CAAW,MAAX,CAAkB,GDId,EAAsB,YAAK;AEL1B,AFMG,ACJJ,QDII,ACJJ,GAAG,EDIM,ACJL,CDIM,KCLI,GDKV,CAAe,CAAf;AACH,ACJD,ODEA,CCFA,SAAS,EAAC,CAFI;ACAd,AFOA,ACJA,MDIA,ECJA,ECHI,CFOC,CAAC,EAAN,ACJM,CCHG,AFOA,CCJF,ECHK,GDGA,ECHK,GDGV,CAAW,CDIlB,EEPY,AFOY,CEPC,IAAb,CAAkB,KAA9B,CFO6B,KCJtB,CAAgC,MAAhC,EAAuC;ACF9C,AFOI,ACJI,EF5BW,MAAM,ACgCrB,CDhCsB,CGyBtB,ADGI,GDIA,CAAC,CCJI,CCHH,CDGI,CADgC,CCFjC,AFOT,CAAW,IEPG,CFOd,CAAiB,KEPR,AFOQ,CEPK,AFOL,GAAA,CEPR,AFOY,CEPM,KFOV,CEPrB,AFOgC,CEtBjC,CAgBC,IFMI,EADyB,CAEzB;AACA,ACLI,UAAA,GAAG,EAAC;AF7BxB,AG2BY,AFQI,ACR0C,OF3B1D,CAAA,CE2BmB,ECAF,IAAL,CAAU,CH3BtB,CG2BY,CAAa,CH3BzB,SAAA,AG2BY,EAAyB,UAAC,OAAD,EAAW;AAChC,AFQA,ACZU,OAAlB,KCIY,WAAW,GAAG,KAAI,CAAC,IAAL,CAAU,IAAV,CAAe;AAC7B,AFSJ,ACNR,UCHY,CAAC,ADGR,ECHU,GDGf,CAAW,CCHS,GAAG,CADkB,CDIzC,CAAkB;ACFN,ADGR,QAAA,ECHQ,CAAC,ADGN,ECHQ,ADGP,MCHa,CDEH,ECFM,CAAT,GAAa,EAFa;AAG7B,AFQP,ACLD,ODHA,CCGA,ECHQ,IAAI,EAAE,CDGL,EAAC,CAFI,QCJuB;AAI7B,AFQX,ACLG,QAAA,ECHQ,IDGF,CCHO,CDGN,CCHQ,IDGH,KAAL,CAAW,oBAAX,CAAgC,MAAhC,EAAuC;ACFlC,ADGJ,UAAA,ECHI,GDGC,CCHG,CDGF,CCHI,ADE4B,gBCH/B;AAEH,ADGJ,UAAA,ECHI,CDGD,EAAC,CCHI,EAAE;AAFH,ADG+B,SAAvC;ACP8B,ADIvB,ED9BK,KC8BvB,CD9B6B,CE0BH,AF1BI,CE0BtB;ADYJ,WAAK,KAAL,CAAW,MAAX,CAAkB;ACHd,AFnChB,ACuCgB,ODvChB,CEmCgB,AFnChB,ACuCgB,GAAG,EAAC,IDvCpB,EEmC2B,CAAC,AFnC5B,ECsC8B,OCHd,AFnChB,CEmCsC,GAAtB,EAA2B,GAA3B;AACA,ADIA,QCJA,ADIA,SAAS,CCJC,CAAC,ADID,CAFI,OCFd,CAAoB,CAApB,EAAuB,KAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,MAAnB,GAA4B,CAA5B,GAAgC,EAAvD,EAA2D,KAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,KAAnB,GAA2B,OAAtF,EAA+F,EAA/F;AAG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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    Scence:{\r\n        Boot:'Boot',\r\n        Menu:'Menu',\r\n        Play:'play',\r\n        Loader:'Loader'\r\n    },\r\n    Audio:{\r\n        Track:'final_bell.mp3'\r\n    },\r\n    Image:{\r\n        Menu:'Menu.jpg',\r\n        start:'playB.png'\r\n    }\r\n     ,\r\n  /* Sprite:{\r\n        adventurer:'hero.png'\r\n    } */ \r\n}","import { CST } from \"./CST\";\r\nexport class BootScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key:CST.Scence.Boot\r\n        })\r\n\r\n    }\r\n      init(){\r\n\r\n      }\r\n      preload(){\r\n         this.load.image(\"Menu\", \"./assets/image/Menu.jpg\") \r\n         this.load.image(\"playB\", \"./assets/image/playB.png\")\r\n\r\n        this.load.audio('theme', './assets/audio/final_bell.mp3')\r\n\r\n        this.load.atlas('knight', './assets/sprites/knight.png','./assets/sprites/knight_atlas.json' )\r\n         \r\n        \r\n            // this.load.on('load', (File:Phaser.Loader.File) =>{\r\n            //     console.log(File);\r\n                \r\n            // })\r\n\r\n      }\r\n      create(){\r\n          //@ts-ignore\r\n        this.scene.start(CST.Scence.Menu, \"sent\")\r\n      }\r\n}","// menu scene\r\n\r\nimport { CST } from \"./CST\";\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key:CST.Scence.Menu\r\n        })\r\n\r\n    }\r\n        //@ts-ignore\r\n        init(data){\r\n            console.log(data);\r\n            console.log('got');\r\n            \r\n            \r\n        }\r\n\r\n        create(){\r\n            let playB = this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.20, \"playB\").setDepth(1)\r\n            this.add.image(-200,-200,\"Menu\").setOrigin(0)\r\n\r\n\r\n            playB.setInteractive();\r\n\r\n            playB.on('pointerover',() =>{\r\n                playB.setScale(1.15)\r\n            })\r\n\r\n            playB.on('pointerout',() =>{\r\n                playB.setScale(1)\r\n            })\r\n            playB.on('pointerdown', () =>{\r\n                this.scene.start(CST.Scence.Loader)\r\n                // this.sound.pauseOnBlur = false;\r\n                // this.sound.play('theme',{\r\n                //     loop:true,\r\n                //     volume:0.45\r\n                    \r\n                // })\r\n            })\r\n        }\r\n}","import { CST } from \"./CST\";\r\nimport { Physics } from \"phaser\";\r\nexport class PlayScene  extends Phaser.Scene{\r\n    player!: Phaser.Physics.Arcade.Sprite;\r\n    keyboard!: { [index: string]: Phaser.Input.Keyboard.Key };\r\n    constructor(){\r\n        \r\n        super({\r\n            key:CST.Scence.Play\r\n        })\r\n\r\n    }\r\n    preload(){\r\n\r\n\r\n        this.textures.addSpriteSheetFromAtlas(\"hero\",{frameWidth:50,frameHeight:50, atlas:\"knight\", frame:\"knight\"})\r\n        this.load.image('tiles', './assets/image/dungeon_sheet.png')\r\n        this.load.image('sword', './assets/image/sword.png')\r\n        \r\n        // to load objects- must make a key\r\n        this.load.spritesheet('items', './assets/image/dungeon_sheet.png',{frameWidth:64, frameHeight:64} )\r\n        this.load.tilemapTiledJSON('map','./assets/map/mappy.json')\r\n        \r\n        \r\n        console.log(this.textures.list);\r\n        this.anims.create({\r\n            key:\"left\",\r\n            frameRate:7,\r\n            frames:this.anims.generateFrameNumbers(\"hero\",{\r\n                    start:2,\r\n                    end:3,\r\n            })\r\n        })\r\n        this.anims.create({\r\n            key:\"right\",\r\n            frameRate:7,\r\n            frames:this.anims.generateFrameNumbers(\"hero\",{\r\n                    start:4,\r\n                    end:5\r\n                })\r\n            })\r\n            this.anims.create({\r\n                key:\"netural\",\r\n                frameRate:7,\r\n                frames:this.anims.generateFrameNumbers(\"hero\",{\r\n                    start:0,\r\n                    end:1\r\n                })\r\n            })       \r\n            \r\n        }\r\n        create(){\r\n\r\n            this.input.on(\"pointerdown\",(pointer:Phaser.Input.Pointer)=>{\r\n\r\n                    var attack = this.add.image(pointer.worldX,pointer.worldY,\"sword\").setScale(0.20)\r\n\r\n                    this.input.on(\"pointerup\",()=>{\r\n                        attack.destroy()\r\n                    })\r\n                 \r\n            })\r\n\r\n        \r\n        let map = this.add.tilemap('map')\r\n        \r\n        let tile = map.addTilesetImage('dungeon_sheet','tiles')\r\n\r\n\r\n        // tile layers\r\n        let botlayer = map.createStaticLayer('floor',[tile],0,0).setDepth(0)\r\n        let midlayer = map.createStaticLayer('decorations',[tile],0,0);\r\n        let door = map.createStaticLayer('door',[tile],0,0)\r\n        let toplayer = map.createStaticLayer('wall',[tile],0,0);\r\n\r\n        let items = map.createFromObjects(\"object layer\", 166, {key:'tiles'}).map\r\n        \r\n        \r\n                \r\n          this.player = this.physics.add.sprite(410,740,'hero',26).setScale(0.30);\r\n          //@ts-ignore\r\n         window.player = this.player;\r\n          //camera\r\n         this.cameras.main.startFollow(this.player).setZoom(6.5)\r\n         this.physics.world.setBounds(0,0, map.widthInPixels, map.heightInPixels);\r\n\r\n        \r\n         //@ts-ignore\r\n         this.keyboard = this.input.keyboard.addKeys(\"W, A, S, D, SPACEBAR\")\r\n\r\n         //Map collisions\r\n         this.physics.add.collider(this.player, midlayer)\r\n         this.physics.add.collider(this.player, toplayer)\r\n         this.physics.add.collider(this.player, door)\r\n         door.setCollisionByProperty({collides:true})\r\n         door.setCollision(173)\r\n        // indexes for mid layer\r\n         midlayer.setCollision([23,24,47,48,71,72,131,132,155,159,184,185,186,187])\r\n        // indexes for top layer\r\n         toplayer.setCollision([0,169,217,218,219,220,1610612956,1610612954,1610612905,2684354729,2147483868,2147483867,2147483866,2147483865,3758096604, 3221225690, 3221225689,3758096603,3221225692,3221225691,536871132,536871130])\r\n\r\n\r\n    }\r\n    // movement\r\n    //adding possible animations\r\n    update(time: number, delta: number) { //delta 16.666 @ 60fps\r\n\r\n      \r\n            if (this.keyboard.D.isDown) {\r\n                this.player.setVelocityX(60);\r\n                //this.player.play('right',true)\r\n                //this.player.play('netural',true)\r\n            }\r\n\r\n            if (this.keyboard.W.isDown) {\r\n                this.player.setVelocityY(-60);\r\n                //this.player.play('netural',true)\r\n                \r\n            }\r\n\r\n            if (this.keyboard.S.isDown) {\r\n                this.player.setVelocityY(60);\r\n                //this.player.play('netural',true)\r\n            }\r\n\r\n            if (this.keyboard.A.isDown) {\r\n                this.player.setVelocityX(-60);\r\n                //this.player.play('left',true)\r\n                //this.player.play('netural',true)\r\n            }\r\n            if (this.keyboard.A.isUp && this.keyboard.D.isUp) { //not moving on X axis\r\n                this.player.setVelocityX(0);\r\n                //this.player.play('netural',true)\r\n            }\r\n            if (this.keyboard.W.isUp && this.keyboard.S.isUp) { //not pressing y movement\r\n                this.player.setVelocityY(0);\r\n                //this.player.play('netural',true)\r\n            }\r\n\r\n            \r\n            \r\n            if (this.player.body.velocity.x > 0) { //moving right\r\n                this.player.play(\"right\", true);\r\n            } else if (this.player.body.velocity.x < 0) { //moving left\r\n                this.player.play(\"left\", true);\r\n            } else if (this.player.body.velocity.y < 0) { //moving up\r\n                this.player.play(\"netural\", true);\r\n            } else if (this.player.body.velocity.y > 0) { //moving down\r\n                this.player.play(\"netural\", true);\r\n            }\r\n\r\n    }\r\n}","import{CST} from './CST'\r\nexport class Loader extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key:CST.Scence.Loader\r\n        })\r\n\r\n    }\r\n    init(){\r\n\r\n    }\r\n    preload(){\r\n        let loadingBar = this.add.graphics({\r\n            fillStyle :{\r\n                color:0xa60000\r\n            }\r\n            })\r\n            \r\n            for (let i = 0; i < 200; i++) {\r\n                this.load.spritesheet('hero'+ i, './assets/sprites/hero.png',{\r\n                    frameWidth:54,\r\n                    frameHeight:54,\r\n                    })\r\n                \r\n            }\r\n            var width = this.cameras.main.width;\r\n            var height = this.cameras.main.height;\r\n            //@ts-ignore\r\n            this.load.on(\"progress\", (percent)=>{\r\n                var loadingText = this.make.text({\r\n                    x: width / 2,\r\n                    y: height / 2 - 50,\r\n                    text: 'Loading...',\r\n                    style: {\r\n                        font: '20px monospace',\r\n                        fill: '#ffffff'\r\n                    }\r\n                });\r\n                loadingText.setOrigin(0.5, 0.5);\r\n                loadingBar.fillRect(0, this.game.renderer.height / 2 + 50, this.game.renderer.width * percent ,50)\r\n               \r\n                \r\n            })\r\n\r\n            var percentText = this.make.text({\r\n                x: width / 2,\r\n                y: height / 2 - 5,\r\n                text: '0%',\r\n                style: {\r\n                    font: '18px monospace',\r\n                    fill: '#ffffff'\r\n                }\r\n            });\r\n            percentText.setOrigin(0.5, 0.5);\r\n            \r\n            //@ts-ignore\r\n            this.load.on('progress', function (value) {\r\n                //@ts-ignore\r\n                percentText.setText(parseInt(value * 100) + '%');\r\n             \r\n            });\r\n\r\n            \r\n            this.load.on('complete', ()=>{\r\n                loadingBar.destroy();\r\n                percentText.destroy();\r\n                \r\n                \r\n            })\r\n    }\r\n    create(){\r\n        this.scene.start(CST.Scence.Play)\r\n    }\r\n}","/**@type {import(\"../type/phaser\")} */\r\n\r\nimport {BootScene} from './BootScene'\r\nimport { MenuScene } from './MenuScene';\r\nimport {PlayScene} from './PlayScene'\r\nimport{Loader} from './Loader'\r\n//import { Scale } from 'phaser';\r\n\r\n\r\nlet game = new Phaser.Game({\r\n    width:window.innerWidth,\r\n    height:window.innerHeight,\r\n    backgroundColor: 0x252538 ,\r\n    scene:[\r\n        BootScene,MenuScene,PlayScene,Loader\r\n    ],\r\n    render:{\r\n        pixelArt:true\r\n    },\r\n    physics: {\r\n        default: \"arcade\",\r\n        arcade: {\r\n            debug: false\r\n        }\r\n    },\r\n    scale:{\r\n        mode:Phaser.Scale.FIT,\r\n        autoCenter:Phaser.Scale.CENTER_BOTH\r\n    }\r\n        \r\n    \r\n});\r\n\r\n\r\n\r\n"]}